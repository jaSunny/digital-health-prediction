
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Workspace loaded from ~/.RData]

> # install dependencies
> if (!require("caret")) {
+   install.packages('caret', dependencies=TRUE)
+ }
Lade nötiges Paket: caret
Lade nötiges Paket: lattice
Lade nötiges Paket: ggplot2
Warning messages:
1: Paket ‘caret’ wurde unter R Version 3.3.2 erstellt
2: Paket ‘ggplot2’ wurde unter R Version 3.3.2 erstellt
> if (!require("mlbench")) {
+   install.packages('mlbench', dependencies=TRUE)
+ }
Lade nötiges Paket: mlbench
Warning message:
Paket ‘mlbench’ wurde unter R Version 3.3.2 erstellt
>
>
> setwd("C:\\Users\\jaSunny\\Documents")
>
> # Load Data
> dat <- read.csv("feature_view_classified_v2.csv",  sep = ",", header=TRUE, na.strings=c(""))
> header <- c("ID","UUID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_OFFSET_BY_AGE")
> colnames(dat) <- header
> relevant_columns <-  c("SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_OFFSET_BY_AGE")
> training <- dat[, relevant_columns]
>
> #current not needed since using factoring of training set
> #dat <- read.csv("feature_view_unclassified.csv",  sep = ",", header=TRUE, na.strings=c(""))
> #header <- c("ID","UID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #colnames(dat) <- header
> #relevant_columns <-  c("FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #classification <- dat[, relevant_columns]
>
> # Manual
> #folds <- cut(seq(1,nrow(training)), breaks=100000, labels=FALSE)
> #training_sample <- training[which(folds==1), ]
> #validation_sample <- training[which(folds==3), ]
> # Run Logistic Regression
> #model <- glm(sick ~.,family=binomial(link='logit'),data=training_sample)
> #summary(model)
> #fitted_results <- predict(model, validation_sample,type='response')
> #results <- ifelse(fitted_results > 0.5,1,0)
> #misClasificError <- mean(results != validation_sample$sick)
> #print(paste('Accuracy',1-misClasificError))
>
>
> # Using caret
> library(caret)
> training_sample_ids <- createDataPartition(training$SICK, p=0.5, list=FALSE)
> training_sample <- training[training_sample_ids, ]
> training_sample$SICK <- factor(training_sample$SICK)
>
> validation_sample <- training[-training_sample_ids, ]
> validation_sample$SICK <- factor(validation_sample$SICK)
>
> glm_ctrl <- trainControl(method = "cv", number = 10)
>
> # Finds best logistic fit
> glm_fit <- train(SICK ~ ., data = training_sample,
+                  method = "glm",
+                  preProcess = c("center", "scale"),
+                  trControl = glm_ctrl,
+                  family="binomial")
There were 21 warnings (use warnings() to see them)
>
> summary(glm_fit)

Call:
NULL

Deviance Residuals:
       Min          1Q      Median          3Q         Max
-2.409e-06  -2.409e-06  -2.409e-06   2.409e-06   2.409e-06

Coefficients: (1 not defined because of singularities)
                                            Estimate Std. Error z value Pr(>|z|)
(Intercept)                               -1.131e+01  1.593e+03  -0.007    0.994
FEATURE_GENDER                             1.776e-11  1.598e+03   0.000    1.000
FEATURE_BIRTH_DATE                        -1.708e-09  1.275e+05   0.000    1.000
FEATURE_BIRTH_YEAR                         1.736e-09  1.275e+05   0.000    1.000
FEATURE_AGE                                       NA         NA      NA       NA
FEATURE_HEIGHT                            -5.485e-11  2.834e+03   0.000    1.000
FEATURE_ZIP                               -7.824e-12  1.593e+03   0.000    1.000
FEATURE_SMOKING_PACKS_A_DAY               -7.673e-11  1.848e+03   0.000    1.000
FEATURE_ACTIVITY_LEVEL                    -7.963e-13  2.060e+03   0.000    1.000
FEATURE_BLOOD_TYPE                         2.011e-11  1.593e+03   0.000    1.000
FEATURE_AVG_SLEEP_TIME                    -2.686e-06  1.253e+10   0.000    1.000
AVG_SLEEP_TIME                             2.686e-06  1.253e+10   0.000    1.000
FEATURE_COMMUTING_DISTANCE                 2.060e-11  5.133e+03   0.000    1.000
FEATURE_DRINKS_ALCOHOL                     1.911e-12  1.726e+03   0.000    1.000
FEATURE_HAS_HYPERTENSION                   2.404e+01  1.603e+03   0.015    0.988
FEATURE_BMI                               -3.132e-11  2.181e+03   0.000    1.000
FEATURE_SLEEP_BY_AGE                      -3.917e-11  2.936e+03   0.000    1.000
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  4.534e-12  2.721e+03   0.000    1.000
FEATURE_BMI_SMOKING_BY_AGE                -1.208e-11  2.000e+03   0.000    1.000
FEATURE_COMMUTING_DRUNK_AGE               -2.174e-11  4.756e+03   0.000    1.000
FEATURE_SLEEP_OFFSET_BY_AGE                1.490e-12  2.032e+03   0.000    1.000

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 5.9959e+04  on 49999  degrees of freedom
Residual deviance: 2.9008e-07  on 49980  degrees of freedom
AIC: 40

Number of Fisher Scoring iterations: 25

>
> pred <- predict(glm_fit, newdata=validation_sample)
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  Vorhersage durch Fit ohne vollen Rang mag täuschen
> misClasificError <- mean(pred != validation_sample$SICK)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 1"
>
>
> glm.fitted <- fitted(glm_fit)
> #print(glm.fitted)
>
> library(mlbench)
> # estimate variable importance
> importance <- varImp(glm_fit, scale=FALSE)
> # summarize importance
> print(importance)
glm variable importance

                                            Overall
FEATURE_HAS_HYPERTENSION                  1.500e-02
FEATURE_SMOKING_PACKS_A_DAY               4.153e-14
FEATURE_HEIGHT                            1.936e-14
FEATURE_BMI                               1.436e-14
FEATURE_BIRTH_YEAR                        1.362e-14
FEATURE_BIRTH_DATE                        1.340e-14
FEATURE_SLEEP_BY_AGE                      1.334e-14
FEATURE_BLOOD_TYPE                        1.262e-14
FEATURE_GENDER                            1.111e-14
FEATURE_BMI_SMOKING_BY_AGE                6.038e-15
FEATURE_ZIP                               4.912e-15
FEATURE_COMMUTING_DRUNK_AGE               4.571e-15
FEATURE_COMMUTING_DISTANCE                4.013e-15
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE 1.666e-15
FEATURE_DRINKS_ALCOHOL                    1.107e-15
FEATURE_SLEEP_OFFSET_BY_AGE               7.333e-16
FEATURE_ACTIVITY_LEVEL                    3.864e-16
FEATURE_AVG_SLEEP_TIME                    2.143e-16
AVG_SLEEP_TIME                            2.143e-16
> # plot importance
> plot(importance)
> # install dependencies
> if (!require("caret")) {
+   install.packages('caret', dependencies=TRUE)
+ }
> if (!require("mlbench")) {
+   install.packages('mlbench', dependencies=TRUE)
+ }
>
>
> setwd("C:\\Users\\jaSunny\\Documents")
>
> # Load Data
> dat <- read.csv("feature_view_classified_v2.csv",  sep = ",", header=TRUE, na.strings=c(""))
> header <- c("ID","UUID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_OFFSET_BY_AGE")
> colnames(dat) <- header
> relevant_columns <-  c("SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_OFFSET_BY_AGE")
> training <- dat[, relevant_columns]
>
> #current not needed since using factoring of training set
> #dat <- read.csv("feature_view_unclassified.csv",  sep = ",", header=TRUE, na.strings=c(""))
> #header <- c("ID","UID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #colnames(dat) <- header
> #relevant_columns <-  c("FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #classification <- dat[, relevant_columns]
>
> # Manual
> #folds <- cut(seq(1,nrow(training)), breaks=100000, labels=FALSE)
> #training_sample <- training[which(folds==1), ]
> #validation_sample <- training[which(folds==3), ]
> # Run Logistic Regression
> #model <- glm(sick ~.,family=binomial(link='logit'),data=training_sample)
> #summary(model)
> #fitted_results <- predict(model, validation_sample,type='response')
> #results <- ifelse(fitted_results > 0.5,1,0)
> #misClasificError <- mean(results != validation_sample$sick)
> #print(paste('Accuracy',1-misClasificError))
>
>
> # Using caret
> library(caret)
> training_sample_ids <- createDataPartition(training$SICK, p=0.5, list=FALSE)
> training_sample <- training[training_sample_ids, ]
> training_sample$SICK <- factor(training_sample$SICK)
>
> validation_sample <- training[-training_sample_ids, ]
> validation_sample$SICK <- factor(validation_sample$SICK)
>
> glm_ctrl <- trainControl(method = "cv", number = 10)
>
> # Finds best logistic fit
> glm_fit <- train(SICK ~ ., data = training_sample,
+                  method = "glm",
+                  preProcess = c("center", "scale"),
+                  trControl = glm_ctrl,
+                  family="binomial")
Warning messages:
1: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
2: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
3: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
4: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
5: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
6: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
7: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
8: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
9: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
10: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
>
> summary(glm_fit)

Call:
NULL

Deviance Residuals:
    Min       1Q   Median       3Q      Max
-1.2592  -0.8389  -0.7770   1.4397   2.3390

Coefficients: (1 not defined because of singularities)
                                            Estimate Std. Error z value Pr(>|z|)
(Intercept)                               -9.421e-01  1.008e-02 -93.502  < 2e-16 ***
FEATURE_GENDER                             9.158e-03  1.002e-02   0.914  0.36073
FEATURE_BIRTH_DATE                         1.051e-01  7.990e-01   0.132  0.89534
FEATURE_BIRTH_YEAR                        -1.009e-01  7.988e-01  -0.126  0.89953
FEATURE_AGE                                       NA         NA      NA       NA
FEATURE_HEIGHT                            -5.269e-02  1.752e-02  -3.007  0.00264 **
FEATURE_ZIP                               -6.065e-04  9.989e-03  -0.061  0.95158
FEATURE_SMOKING_PACKS_A_DAY                1.322e-01  1.105e-02  11.966  < 2e-16 ***
FEATURE_ACTIVITY_LEVEL                    -1.913e-01  1.397e-02 -13.700  < 2e-16 ***
FEATURE_BLOOD_TYPE                        -4.719e-03  9.990e-03  -0.472  0.63668
FEATURE_AVG_SLEEP_TIME                     2.014e+04  7.878e+04   0.256  0.79827
AVG_SLEEP_TIME                            -2.014e+04  7.878e+04  -0.256  0.79827
FEATURE_COMMUTING_DISTANCE                 1.301e-02  3.442e-02   0.378  0.70545
FEATURE_DRINKS_ALCOHOL                     1.409e-01  1.326e-02  10.630  < 2e-16 ***
FEATURE_BMI                                1.660e-02  1.357e-02   1.223  0.22125
FEATURE_SLEEP_BY_AGE                       1.950e-03  1.737e-02   0.112  0.91060
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  4.099e-03  1.861e-02   0.220  0.82567
FEATURE_BMI_SMOKING_BY_AGE                 2.760e-04  1.137e-02   0.024  0.98064
FEATURE_COMMUTING_DRUNK_AGE               -2.323e-02  3.174e-02  -0.732  0.46408
FEATURE_SLEEP_OFFSET_BY_AGE               -1.734e-02  1.267e-02  -1.368  0.17130
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 59660  on 49999  degrees of freedom
Residual deviance: 58945  on 49981  degrees of freedom
AIC: 58983

Number of Fisher Scoring iterations: 4

>
> pred <- predict(glm_fit, newdata=validation_sample)
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  Vorhersage durch Fit ohne vollen Rang mag täuschen
> misClasificError <- mean(pred != validation_sample$SICK)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.71316"
>
>
> glm.fitted <- fitted(glm_fit)
> #print(glm.fitted)
>
> library(mlbench)
> # estimate variable importance
> importance <- varImp(glm_fit, scale=FALSE)
> # summarize importance
> print(importance)
glm variable importance

                                           Overall
FEATURE_ACTIVITY_LEVEL                    13.69999
FEATURE_SMOKING_PACKS_A_DAY               11.96563
FEATURE_DRINKS_ALCOHOL                    10.62989
FEATURE_HEIGHT                             3.00702
FEATURE_SLEEP_OFFSET_BY_AGE                1.36803
FEATURE_BMI                                1.22321
FEATURE_GENDER                             0.91397
FEATURE_COMMUTING_DRUNK_AGE                0.73214
FEATURE_BLOOD_TYPE                         0.47235
FEATURE_COMMUTING_DISTANCE                 0.37797
AVG_SLEEP_TIME                             0.25559
FEATURE_AVG_SLEEP_TIME                     0.25559
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  0.22025
FEATURE_BIRTH_DATE                         0.13155
FEATURE_BIRTH_YEAR                         0.12626
FEATURE_SLEEP_BY_AGE                       0.11228
FEATURE_ZIP                                0.06072
FEATURE_BMI_SMOKING_BY_AGE                 0.02427
> # plot importance
> plot(importance)
> # install dependencies
> if (!require("caret")) {
+   install.packages('caret', dependencies=TRUE)
+ }
> if (!require("mlbench")) {
+   install.packages('mlbench', dependencies=TRUE)
+ }
>
>
> setwd("C:\\Users\\jaSunny\\Documents")
>
> # Load Data
> dat <- read.csv("feature_view_classified_v2.csv",  sep = ",", header=TRUE, na.strings=c(""))
> header <- c("ID","UUID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_POS_OFFSET_BY_AGE","FEATURE_SLEEP_NEG_OFFSET_BY_AGE")
> colnames(dat) <- header
Error in `colnames<-`(`*tmp*`, value = c("ID", "UUID", "SICK", "FEATURE_GENDER",  :
  'names' attribute [24] must be the same length as the vector [23]
> relevant_columns <-  c("SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_POS_OFFSET_BY_AGE","FEATURE_SLEEP_NEG_OFFSET_BY_AGE")
> training <- dat[, relevant_columns]
Error in `[.data.frame`(dat, , relevant_columns) :
  undefined columns selected
>
> #current not needed since using factoring of training set
> #dat <- read.csv("feature_view_unclassified.csv",  sep = ",", header=TRUE, na.strings=c(""))
> #header <- c("ID","UID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #colnames(dat) <- header
> #relevant_columns <-  c("FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #classification <- dat[, relevant_columns]
>
> # Manual
> #folds <- cut(seq(1,nrow(training)), breaks=100000, labels=FALSE)
> #training_sample <- training[which(folds==1), ]
> #validation_sample <- training[which(folds==3), ]
> # Run Logistic Regression
> #model <- glm(sick ~.,family=binomial(link='logit'),data=training_sample)
> #summary(model)
> #fitted_results <- predict(model, validation_sample,type='response')
> #results <- ifelse(fitted_results > 0.5,1,0)
> #misClasificError <- mean(results != validation_sample$sick)
> #print(paste('Accuracy',1-misClasificError))
>
>
> # Using caret
> library(caret)
> training_sample_ids <- createDataPartition(training$SICK, p=0.5, list=FALSE)
> training_sample <- training[training_sample_ids, ]
> training_sample$SICK <- factor(training_sample$SICK)
>
> validation_sample <- training[-training_sample_ids, ]
> validation_sample$SICK <- factor(validation_sample$SICK)
>
> glm_ctrl <- trainControl(method = "cv", number = 10)
>
> # Finds best logistic fit
> glm_fit <- train(SICK ~ ., data = training_sample,
+                  method = "glm",
+                  preProcess = c("center", "scale"),
+                  trControl = glm_ctrl,
+                  family="binomial")
Warning messages:
1: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
2: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
3: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
4: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
5: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
6: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
7: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
8: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
9: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
10: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
>
> summary(glm_fit)

Call:
NULL

Deviance Residuals:
    Min       1Q   Median       3Q      Max
-1.3170  -0.8393  -0.7817   1.4315   2.3427

Coefficients: (1 not defined because of singularities)
                                            Estimate Std. Error z value Pr(>|z|)
(Intercept)                               -9.328e-01  1.005e-02 -92.788  < 2e-16 ***
FEATURE_GENDER                            -2.237e-03  9.999e-03  -0.224  0.82295
FEATURE_BIRTH_DATE                        -1.891e-01  7.963e-01  -0.238  0.81225
FEATURE_BIRTH_YEAR                         1.946e-01  7.961e-01   0.244  0.80685
FEATURE_AGE                                       NA         NA      NA       NA
FEATURE_HEIGHT                            -1.447e-02  1.760e-02  -0.822  0.41096
FEATURE_ZIP                                2.424e-03  9.972e-03   0.243  0.80795
FEATURE_SMOKING_PACKS_A_DAY                1.561e-01  1.105e-02  14.124  < 2e-16 ***
FEATURE_ACTIVITY_LEVEL                    -1.851e-01  1.378e-02 -13.434  < 2e-16 ***
FEATURE_BLOOD_TYPE                         1.307e-02  9.952e-03   1.313  0.18924
FEATURE_AVG_SLEEP_TIME                    -4.967e+04  7.846e+04  -0.633  0.52667
AVG_SLEEP_TIME                             4.967e+04  7.846e+04   0.633  0.52667
FEATURE_COMMUTING_DISTANCE                -1.482e-02  3.378e-02  -0.439  0.66077
FEATURE_DRINKS_ALCOHOL                     1.410e-01  1.332e-02  10.583  < 2e-16 ***
FEATURE_BMI                                3.948e-02  1.359e-02   2.906  0.00367 **
FEATURE_SLEEP_BY_AGE                       1.523e-02  1.750e-02   0.871  0.38398
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  1.498e-02  1.809e-02   0.828  0.40765
FEATURE_BMI_SMOKING_BY_AGE                -2.202e-02  1.176e-02  -1.872  0.06123 .
FEATURE_COMMUTING_DRUNK_AGE                1.478e-02  3.114e-02   0.474  0.63514
FEATURE_SLEEP_OFFSET_BY_AGE               -2.083e-02  1.278e-02  -1.630  0.10303
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 59826  on 49999  degrees of freedom
Residual deviance: 59123  on 49981  degrees of freedom
AIC: 59161

Number of Fisher Scoring iterations: 4

>
> pred <- predict(glm_fit, newdata=validation_sample)
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  Vorhersage durch Fit ohne vollen Rang mag täuschen
> misClasificError <- mean(pred != validation_sample$SICK)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.71504"
>
>
> glm.fitted <- fitted(glm_fit)
> #print(glm.fitted)
>
> library(mlbench)
> # estimate variable importance
> importance <- varImp(glm_fit, scale=FALSE)
> # summarize importance
> print(importance)
glm variable importance

                                          Overall
FEATURE_SMOKING_PACKS_A_DAY               14.1238
FEATURE_ACTIVITY_LEVEL                    13.4339
FEATURE_DRINKS_ALCOHOL                    10.5835
FEATURE_BMI                                2.9055
FEATURE_BMI_SMOKING_BY_AGE                 1.8718
FEATURE_SLEEP_OFFSET_BY_AGE                1.6304
FEATURE_BLOOD_TYPE                         1.3128
FEATURE_SLEEP_BY_AGE                       0.8706
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  0.8280
FEATURE_HEIGHT                             0.8222
AVG_SLEEP_TIME                             0.6331
FEATURE_AVG_SLEEP_TIME                     0.6331
FEATURE_COMMUTING_DRUNK_AGE                0.4745
FEATURE_COMMUTING_DISTANCE                 0.4388
FEATURE_BIRTH_YEAR                         0.2445
FEATURE_ZIP                                0.2431
FEATURE_BIRTH_DATE                         0.2375
FEATURE_GENDER                             0.2238
> # plot importance
> plot(importance)
> # install dependencies
> if (!require("caret")) {
+   install.packages('caret', dependencies=TRUE)
+ }
> if (!require("mlbench")) {
+   install.packages('mlbench', dependencies=TRUE)
+ }
>
>
> setwd("C:\\Users\\jaSunny\\Documents")
>
> # Load Data
> dat <- read.csv("feature_view_classified_v3.csv",  sep = ",", header=TRUE, na.strings=c(""))
> header <- c("ID","UUID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_POS_OFFSET_BY_AGE","FEATURE_SLEEP_NEG_OFFSET_BY_AGE")
> colnames(dat) <- header
> relevant_columns <-  c("SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_POS_OFFSET_BY_AGE","FEATURE_SLEEP_NEG_OFFSET_BY_AGE")
> training <- dat[, relevant_columns]
>
> #current not needed since using factoring of training set
> #dat <- read.csv("feature_view_unclassified.csv",  sep = ",", header=TRUE, na.strings=c(""))
> #header <- c("ID","UID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #colnames(dat) <- header
> #relevant_columns <-  c("FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #classification <- dat[, relevant_columns]
>
> # Manual
> #folds <- cut(seq(1,nrow(training)), breaks=100000, labels=FALSE)
> #training_sample <- training[which(folds==1), ]
> #validation_sample <- training[which(folds==3), ]
> # Run Logistic Regression
> #model <- glm(sick ~.,family=binomial(link='logit'),data=training_sample)
> #summary(model)
> #fitted_results <- predict(model, validation_sample,type='response')
> #results <- ifelse(fitted_results > 0.5,1,0)
> #misClasificError <- mean(results != validation_sample$sick)
> #print(paste('Accuracy',1-misClasificError))
>
>
> # Using caret
> library(caret)
> training_sample_ids <- createDataPartition(training$SICK, p=0.5, list=FALSE)
> training_sample <- training[training_sample_ids, ]
> training_sample$SICK <- factor(training_sample$SICK)
>
> validation_sample <- training[-training_sample_ids, ]
> validation_sample$SICK <- factor(validation_sample$SICK)
>
> glm_ctrl <- trainControl(method = "cv", number = 10)
>
> # Finds best logistic fit
> glm_fit <- train(SICK ~ ., data = training_sample,
+                  method = "glm",
+                  preProcess = c("center", "scale"),
+                  trControl = glm_ctrl,
+                  family="binomial")
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning messages:
1: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
2: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
3: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
4: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
5: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
6: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
7: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
8: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
9: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
10: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
>
> summary(glm_fit)

Call:
NULL

Deviance Residuals:
    Min       1Q   Median       3Q      Max
-1.4281  -0.8353  -0.7769   1.4388   2.2203

Coefficients: (2 not defined because of singularities)
                                            Estimate Std. Error z value Pr(>|z|)
(Intercept)                               -9.393e-01  1.005e-02 -93.441  < 2e-16 ***
FEATURE_GENDER                             7.393e-03  1.001e-02   0.739  0.46003
FEATURE_BIRTH_DATE                        -6.516e-01  8.008e-01  -0.814  0.41581
FEATURE_BIRTH_YEAR                         6.360e-01  8.007e-01   0.794  0.42702
FEATURE_AGE                                       NA         NA      NA       NA
FEATURE_HEIGHT                            -5.443e-02  1.758e-02  -3.095  0.00197 **
FEATURE_ZIP                                1.634e-03  9.982e-03   0.164  0.86998
FEATURE_SMOKING_PACKS_A_DAY                1.522e-01  1.097e-02  13.872  < 2e-16 ***
FEATURE_ACTIVITY_LEVEL                    -1.717e-01  1.394e-02 -12.315  < 2e-16 ***
FEATURE_BLOOD_TYPE                        -2.970e-03  9.986e-03  -0.297  0.76619
FEATURE_AVG_SLEEP_TIME                    -1.963e+05  7.872e+04  -2.493  0.01266 *
AVG_SLEEP_TIME                             1.963e+05  7.872e+04   2.493  0.01266 *
FEATURE_COMMUTING_DISTANCE                 4.886e-02  3.375e-02   1.448  0.14775
FEATURE_DRINKS_ALCOHOL                     1.147e-01  1.260e-02   9.102  < 2e-16 ***
FEATURE_BMI                                4.974e-03  1.354e-02   0.367  0.71339
FEATURE_SLEEP_BY_AGE                      -4.536e-03  1.757e-02  -0.258  0.79630
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE -1.728e-02  1.864e-02  -0.927  0.35391
FEATURE_BMI_SMOKING_BY_AGE                -2.680e-02  1.189e-02  -2.254  0.02417 *
FEATURE_COMMUTING_DRUNK_AGE               -3.152e-02  3.121e-02  -1.010  0.31250
FEATURE_SLEEP_POS_OFFSET_BY_AGE                   NA         NA      NA       NA
FEATURE_SLEEP_NEG_OFFSET_BY_AGE           -1.429e-02  1.282e-02  -1.114  0.26514
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 59673  on 49999  degrees of freedom
Residual deviance: 59025  on 49981  degrees of freedom
AIC: 59063

Number of Fisher Scoring iterations: 4

>
> pred <- predict(glm_fit, newdata=validation_sample)
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  Vorhersage durch Fit ohne vollen Rang mag täuschen
> misClasificError <- mean(pred != validation_sample$SICK)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.71578"
>
>
> glm.fitted <- fitted(glm_fit)
> #print(glm.fitted)
>
> library(mlbench)
> # estimate variable importance
> importance <- varImp(glm_fit, scale=FALSE)
> # summarize importance
> print(importance)
glm variable importance

                                          Overall
FEATURE_SMOKING_PACKS_A_DAY               13.8722
FEATURE_ACTIVITY_LEVEL                    12.3152
FEATURE_DRINKS_ALCOHOL                     9.1021
FEATURE_HEIGHT                             3.0953
FEATURE_AVG_SLEEP_TIME                     2.4933
AVG_SLEEP_TIME                             2.4933
FEATURE_BMI_SMOKING_BY_AGE                 2.2544
FEATURE_COMMUTING_DISTANCE                 1.4475
FEATURE_SLEEP_NEG_OFFSET_BY_AGE            1.1143
FEATURE_COMMUTING_DRUNK_AGE                1.0100
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  0.9270
FEATURE_BIRTH_DATE                         0.8137
FEATURE_BIRTH_YEAR                         0.7943
FEATURE_GENDER                             0.7388
FEATURE_BMI                                0.3673
FEATURE_BLOOD_TYPE                         0.2974
FEATURE_SLEEP_BY_AGE                       0.2581
FEATURE_ZIP                                0.1637
> # plot importance
> plot(importance)
> # install dependencies
> if (!require("caret")) {
+   install.packages('caret', dependencies=TRUE)
+ }
> if (!require("mlbench")) {
+   install.packages('mlbench', dependencies=TRUE)
+ }
>
>
> setwd("C:\\Users\\jaSunny\\Documents")
>
> # Load Data
> dat <- read.csv("feature_view_classified_v4.csv",  sep = ",", header=TRUE, na.strings=c(""))
> header <- c("ID","UUID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_POS_OFFSET_BY_AGE","FEATURE_SLEEP_NEG_OFFSET_BY_AGE","FEATURE_SLEEP_OFFSET_BY_AGE_FROM_MEAN")
> colnames(dat) <- header
> relevant_columns <-  c("SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE","FEATURE_SLEEP_POS_OFFSET_BY_AGE","FEATURE_SLEEP_NEG_OFFSET_BY_AGE","FEATURE_SLEEP_OFFSET_BY_AGE_FROM_MEAN")
> training <- dat[, relevant_columns]
>
> #current not needed since using factoring of training set
> #dat <- read.csv("feature_view_unclassified.csv",  sep = ",", header=TRUE, na.strings=c(""))
> #header <- c("ID","UID","SICK","FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #colnames(dat) <- header
> #relevant_columns <-  c("FEATURE_GENDER","FEATURE_BIRTH_DATE","FEATURE_BIRTH_YEAR","FEATURE_AGE","FEATURE_HEIGHT","FEATURE_ZIP","FEATURE_SMOKING_PACKS_A_DAY","FEATURE_ACTIVITY_LEVEL","FEATURE_BLOOD_TYPE","FEATURE_AVG_SLEEP_TIME","FEATURE_COMMUTING_DISTANCE","FEATURE_DRINKS_ALCOHOL","FEATURE_HAS_HYPERTENSION","FEATURE_BMI","FEATURE_SLEEP_BY_AGE","FEATURE_BMI_SMOKING_BY_AGE","FEATURE_COMMUTING_DRUNK_AGE")
> #classification <- dat[, relevant_columns]
>
> # Manual
> #folds <- cut(seq(1,nrow(training)), breaks=100000, labels=FALSE)
> #training_sample <- training[which(folds==1), ]
> #validation_sample <- training[which(folds==3), ]
> # Run Logistic Regression
> #model <- glm(sick ~.,family=binomial(link='logit'),data=training_sample)
> #summary(model)
> #fitted_results <- predict(model, validation_sample,type='response')
> #results <- ifelse(fitted_results > 0.5,1,0)
> #misClasificError <- mean(results != validation_sample$sick)
> #print(paste('Accuracy',1-misClasificError))
>
>
> # Using caret
> library(caret)
> training_sample_ids <- createDataPartition(training$SICK, p=0.5, list=FALSE)
> training_sample <- training[training_sample_ids, ]
> training_sample$SICK <- factor(training_sample$SICK)
>
> validation_sample <- training[-training_sample_ids, ]
> validation_sample$SICK <- factor(validation_sample$SICK)
>
> glm_ctrl <- trainControl(method = "cv", number = 10)
>
> # Finds best logistic fit
> glm_fit <- train(SICK ~ ., data = training_sample,
+                  method = "glm",
+                  preProcess = c("center", "scale"),
+                  trControl = glm_ctrl,
+                  family="binomial")
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut = 10,  :
  These variables have zero variances: FEATURE_SLEEP_POS_OFFSET_BY_AGE
Warning messages:
1: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
2: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
3: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
4: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
5: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
6: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
7: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
8: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
9: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
10: In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
>
> summary(glm_fit)

Call:
NULL

Deviance Residuals:
    Min       1Q   Median       3Q      Max
-1.3022  -0.8371  -0.7807   1.4276   2.1325

Coefficients: (2 not defined because of singularities)
                                            Estimate Std. Error z value Pr(>|z|)
(Intercept)                               -9.239e-01  1.002e-02 -92.226   <2e-16 ***
FEATURE_GENDER                             1.675e-03  9.971e-03   0.168   0.8666
FEATURE_BIRTH_DATE                         8.201e-01  7.963e-01   1.030   0.3030
FEATURE_BIRTH_YEAR                        -8.205e-01  7.962e-01  -1.031   0.3027
FEATURE_AGE                                       NA         NA      NA       NA
FEATURE_HEIGHT                            -2.144e-02  1.748e-02  -1.226   0.2201
FEATURE_ZIP                                1.180e-02  9.943e-03   1.187   0.2354
FEATURE_SMOKING_PACKS_A_DAY                1.601e-01  1.104e-02  14.499   <2e-16 ***
FEATURE_ACTIVITY_LEVEL                    -1.759e-01  1.369e-02 -12.852   <2e-16 ***
FEATURE_BLOOD_TYPE                         4.493e-03  9.945e-03   0.452   0.6514
FEATURE_AVG_SLEEP_TIME                    -1.436e+05  7.844e+04  -1.831   0.0670 .
AVG_SLEEP_TIME                             1.436e+05  7.844e+04   1.831   0.0670 .
FEATURE_COMMUTING_DISTANCE                 1.467e-02  3.357e-02   0.437   0.6622
FEATURE_DRINKS_ALCOHOL                     1.254e-01  1.264e-02   9.914   <2e-16 ***
FEATURE_BMI                                2.948e-02  1.354e-02   2.178   0.0294 *
FEATURE_SLEEP_BY_AGE                       2.699e-02  1.737e-02   1.554   0.1201
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  3.196e-02  1.771e-02   1.805   0.0710 .
FEATURE_BMI_SMOKING_BY_AGE                -1.441e-02  1.151e-02  -1.251   0.2108
FEATURE_COMMUTING_DRUNK_AGE               -5.491e-02  3.145e-02  -1.746   0.0809 .
FEATURE_SLEEP_POS_OFFSET_BY_AGE                   NA         NA      NA       NA
FEATURE_SLEEP_NEG_OFFSET_BY_AGE           -4.021e-03  1.286e-02  -0.313   0.7546
FEATURE_SLEEP_OFFSET_BY_AGE_FROM_MEAN     -2.221e-02  1.038e-02  -2.141   0.0323 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 59955  on 49999  degrees of freedom
Residual deviance: 59294  on 49980  degrees of freedom
AIC: 59334

Number of Fisher Scoring iterations: 4

>
> pred <- predict(glm_fit, newdata=validation_sample)
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  Vorhersage durch Fit ohne vollen Rang mag täuschen
> misClasificError <- mean(pred != validation_sample$SICK)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.71516"
>
>
> glm.fitted <- fitted(glm_fit)
> #print(glm.fitted)
>
> library(mlbench)
> # estimate variable importance
> importance <- varImp(glm_fit, scale=FALSE)
> # summarize importance
> print(importance)
glm variable importance

                                          Overall
FEATURE_SMOKING_PACKS_A_DAY               14.4992
FEATURE_ACTIVITY_LEVEL                    12.8518
FEATURE_DRINKS_ALCOHOL                     9.9142
FEATURE_BMI                                2.1778
FEATURE_SLEEP_OFFSET_BY_AGE_FROM_MEAN      2.1407
FEATURE_AVG_SLEEP_TIME                     1.8314
AVG_SLEEP_TIME                             1.8314
FEATURE_ACTIVITY_LVL_COMMUTING_DIS_BY_AGE  1.8052
FEATURE_COMMUTING_DRUNK_AGE                1.7457
FEATURE_SLEEP_BY_AGE                       1.5543
FEATURE_BMI_SMOKING_BY_AGE                 1.2514
FEATURE_HEIGHT                             1.2263
FEATURE_ZIP                                1.1866
FEATURE_BIRTH_YEAR                         1.0306
FEATURE_BIRTH_DATE                         1.0299
FEATURE_BLOOD_TYPE                         0.4518
FEATURE_COMMUTING_DISTANCE                 0.4369
FEATURE_SLEEP_NEG_OFFSET_BY_AGE            0.3125
FEATURE_GENDER                             0.1680
> # plot importance
